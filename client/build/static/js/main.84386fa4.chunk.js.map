{"version":3,"sources":["app/services/request.js","app/services/todo.js","app/const.js","app/components/todo.js","app/actions/todoActions.js","app/App.js","serviceWorker.js","app/reducers/todoReducers.js","index.js"],"names":["request","GET","method","headers","Accept","Content-Type","POST","PUT","DELETE","handleResponse","response","text","then","data","JSON","parse","ok","msg","statusText","catch","e","Object","objectSpread","code","todoService","getItems","callback","fetch","json","addItem","detail","req","body","stringify","deleteItem","uuid","changeStatus","ADD_DETAIL","ADD_ITEM","CANCEL_ITEM","CHANGE_STATUS","CLEAR_ALL","LOAD_LIST","CLOSE_DETAIL","SHOW_DETAIL","Todo","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","title","current","value","undefined","props","loadList","alert","React","createRef","id","done","_this2","key","detailObj","react_default","a","createElement","onClick","showDetail","className","_this3","finishItem","_this4","list","values","map","todo","todoText","doneButton","cancelItem","currList","clearAll","length","_this5","ui","type","closeDetail","ref","placeholder","rows","cols","produceTodoListView","detailedView","produceDetailView","produceAddTodoItemView","Component","mapDispatchToProps","addDetail","obj","connect","state","App","app_components_todo","Boolean","window","location","hostname","match","newItem","arguments","defaultUI","combineReducers","action","item","defineProperty","tempList","_i","_Object$keys","keys","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ReactDOM","render","es","store","createStore","reducers","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84386fa4.chunk.js","sourcesContent":["export const request = {\n    GET: {\n      method: 'GET',\n      headers: { Accept: 'application/json', 'Content-Type': 'application/json' }\n    },\n    POST: {\n      method: 'POST',\n      headers: { Accept: 'application/json', 'Content-Type': 'application/json' }\n    },\n    PUT: {\n      method: 'PUT',\n      headers: { Accept: 'application/json', 'Content-Type': 'application/json' }\n    },\n    DELETE: {\n      method: 'DELETE',\n      headers: { Accept: 'application/json', 'Content-Type': 'application/json' }\n    }\n  }\n\nexport const handleResponse = (response) => {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) return (data && data.msg) || response.statusText;\n        return data;\n    }).catch((e) => {\n        return { ...e, code: 400 };\n    });\n}","import { request, handleResponse } from \"./request\";\n\nexport const todoService = {\n    getItems,\n    addItem,\n    deleteItem,\n    changeStatus\n};\n\nfunction getItems(callback) {\n    \n    let url = '/load/list';\n    fetch(url, request.GET).then(response => response.json()).then(callback);\n}\n\nfunction addItem(text, detail, callback) {\n    const req = {\n        ...request.POST,\n        body: JSON.stringify({\n            text: text,\n            detail: detail\n        })\n    };\n    \n    let url = '/add/list';\n    return fetch(url, req).then(handleResponse).then(callback);\n}\n\nfunction deleteItem(uuid) {\n    let url = '/delete/' + uuid;\n    fetch(url, request.DELETE).then(handleResponse);\n}\n\nfunction changeStatus(uuid) {\n    \n    let url = '/update/' + uuid;\n    fetch(url, request.PUT).then(handleResponse);\n}\n","// todo list\nexport const ADD_DETAIL = \"addDetail\";\nexport const ADD_ITEM = \"addItem\";\nexport const CANCEL_ITEM = \"cancelItem\";\nexport const CHANGE_STATUS = \"changeStatus\";\nexport const CLEAR_ALL = \"clearAll\";\nexport const LOAD_LIST = \"loadList\";\n\n// ui\nexport const CLOSE_DETAIL = \"closeDetail\";\nexport const SHOW_DETAIL = \"showDetail\";\n","\nimport React from 'react';\nimport './todo.css';\nimport { connect } from 'react-redux';\nimport { todoService } from '../services/todo';\nimport { addItem, finishItem, cancelItem, addDetail, showDetail, closeDetail, clearAll, loadList } from '../actions/todoActions'\n\nclass Todo extends React.Component {\n    constructor() {\n        super();\n        this.title = React.createRef();\n        this.detail = React.createRef();\n    }\n    componentDidMount() {\n        todoService.getItems(this.props.loadList);\n    }\n    todoText(id, text, done, detail) {\n        const key = id + \"1\";\n        let detailObj = { title: text, detail: detail };\n        if (done) {\n            return <li key={key} onClick={() => this.props.showDetail(detailObj)} className=\"text cross-out\">{text}</li>\n        } else {\n            return <li key={key} onClick={() => this.props.showDetail(detailObj)} className=\"text\">{text} {done}</li>\n        }\n    }\n    doneButton(id, done) {\n        const key = id + \"2\";\n        if (done) {\n            return <li key={key} className=\"done\" onClick={() => this.props.finishItem(id)}>Not Done</li>\n        } else {\n            return <li key={key} className=\"done\" onClick={() => this.props.finishItem(id)}>Done</li>\n        }\n    }\n    produceTodoListView() {\n        let list = Object.values(this.props.list).map((todo) =>\n            <ul className=\"horizontal\" key={todo.id + \"list\"}>\n                {this.todoText(todo.id, todo.text, todo.done, todo.detail)}\n                {this.doneButton(todo.id, todo.done)}\n                <li key={todo.id} className=\"cancel\" onClick={() => this.props.cancelItem(todo.id)}>Cancel</li>\n            </ul>\n        );\n        let currList = (\n            <div className=\"3\">\n                <h3>All todo list</h3>\n            </div>\n        )\n        let clearAll = (\n            <div className=\"container center\">\n                <button className=\"button-clear\" onClick={() => this.props.clearAll()}>Clear All</button>\n            </div>\n        )\n        return (\n            <div>\n                {list.length > 0 ? currList : null}\n                <br></br>\n                <ul>{list}</ul>\n                <br></br>\n                {list.length > 0 ? clearAll : null}\n            </div>\n        )\n    }\n    produceDetailView() {\n        return (\n            <div className=\"container center\">\n                <h3>{this.props.ui.title}</h3>\n                <h5>{this.props.ui.detail}</h5>\n                <input type=\"button\" onClick={() => this.props.closeDetail()} value=\"Close\" className=\"button button-clear\"></input>\n            </div>\n        )\n    }\n    produceAddTodoItemView() {\n        return (\n            <form>\n                <input ref={this.title} type=\"text\" className=\"text-line\" placeholder=\"Any todo item?\"></input>\n                <br></br>\n                <textarea ref={this.detail} className=\"text-line text-small-font\" rows=\"5\" cols=\"30\" placeholder=\"Any details?\"></textarea>\n                <br></br>\n                <input type=\"button\" value=\"Add\" className=\"button button-add\" onClick={this.submit}></input>\n            </form>\n        )\n    }\n    submit = () => {\n        if (this.title.current.value === \"\") {\n            alert(\"Enter something\")\n            return;\n        }\n        let showItem = (data) => {\n            if (data[\"todo\"] !== null || data[\"todo\"] !== undefined)\n                this.props.loadList(data);\n        }\n        todoService.addItem(this.title.current.value, this.detail.current.value, showItem);\n        this.title.current.value = \"\";\n        this.detail.current.value = \"\";\n    }\n    render() {\n        const list = this.produceTodoListView();\n        const detailedView = this.produceDetailView();\n        return (\n            <div className=\"container\">\n                <div className=\"center\">\n                    <h2>Todo List</h2>\n                </div>\n                <div className=\"center\">\n                    {this.produceAddTodoItemView()}\n                </div>\n                {this.props.ui.showDetail ? detailedView : list}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => { return { list: state.list, ui: state.ui } };\nconst mapDispatchToProps = { addItem, finishItem, cancelItem, addDetail, showDetail, closeDetail, clearAll, loadList };\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","import { ADD_ITEM, CHANGE_STATUS, CANCEL_ITEM, ADD_DETAIL, SHOW_DETAIL, CLOSE_DETAIL, CLEAR_ALL, LOAD_LIST } from '../const';\n\n// todo list\nfunction addItem(text, detail) {\n    return {type: ADD_ITEM, text: text, detail: detail};\n}\n\nfunction finishItem(id) {\n    return {type: CHANGE_STATUS, id: id};\n}\n\nfunction cancelItem(id) {\n    return {type: CANCEL_ITEM, id: id};\n}\n\nfunction addDetail(obj) {\n    return {type: ADD_DETAIL, id: obj.id, detail: obj.detail};\n}\n\nfunction clearAll() {\n    return {type: CLEAR_ALL};\n}\n\nfunction loadList(list) {\n    return {type: LOAD_LIST, list: list};\n}\n\nexport { addItem, finishItem, cancelItem, addDetail, clearAll, loadList };\n\n// ui\nfunction showDetail(obj) {\n    return {type: SHOW_DETAIL, title: obj.title, detail: obj.detail};\n}\n\nfunction closeDetail() {\n    return {type: CLOSE_DETAIL};\n}\n\nexport { showDetail, closeDetail };","import React from 'react';\nimport { connect } from 'react-redux';\nimport Todo from './components/todo';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <div>\n                        <Todo />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect()(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { ADD_ITEM, CHANGE_STATUS, CANCEL_ITEM, ADD_DETAIL, SHOW_DETAIL, CLOSE_DETAIL, CLEAR_ALL, LOAD_LIST } from '../const';\nimport { todoService } from '../services/todo';\n\nfunction newItem(text, id, done=false, detail=\"\") {\n    return {\n        id: id,\n        text: text,\n        detail: detail,\n        done: done\n    }\n}\n\nfunction loadList(list) {\n    let result = {};\n    for (let todo of list[\"todo\"]) {\n        result[todo[\"id\"]] = todo;\n    }\n    for (let done of list[\"done\"]) {\n        result[done[\"id\"]] = done;\n    }\n    return result;\n}\n\nconst listReducer = (list={}, action) => {\n    if (action.type === ADD_ITEM) {\n        let item = newItem(action.text, undefined, false, action.detail);\n        return {...list, [item.id]: item};\n    } else if (action.type === CHANGE_STATUS) {\n        todoService.changeStatus(action.id);\n        return {...list, [action.id]: newItem(list[action.id].text, action.id, !list[action.id].done, list[action.id].detail)};\n    } else if (action.type === CANCEL_ITEM) {\n        let tempList = {...list};\n        todoService.deleteItem(action.id);\n        delete tempList[action.id];\n        return tempList;\n    } else if (action.type === ADD_DETAIL) {\n        return {...list, [action.id]: newItem(list[action.id].text, action.id, list[action.id].done, action.detail)};\n    } else if (action.type === CLEAR_ALL) {\n        for (let key of Object.keys(list))\n            todoService.deleteItem(key);\n        return {};\n    } else if (action.type === LOAD_LIST) {\n        return loadList(action.list);\n    }\n    return list;\n}\n\nconst defaultUI = {\n    showDetail: false,\n    title: \"\",\n    detail: \"\"\n}\n\nconst uiReducer = (ui=defaultUI, action) => {\n    if (action.type === SHOW_DETAIL) {\n        let detail = action.detail;\n        if (detail === \"\")\n            detail = \"This item has no detail...\"\n        return {showDetail: true, title: action.title, detail: detail};\n    } else if (action.type === CLOSE_DETAIL) {\n        return defaultUI;\n    }\n    return ui;\n}\n\nexport default combineReducers({\n    list: listReducer,\n    ui: uiReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './app/reducers/todoReducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}